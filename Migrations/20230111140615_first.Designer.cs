// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quizapp.Data;

#nullable disable

namespace quizapp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230111140615_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.12");

            modelBuilder.Entity("quizapp.Models.ClassRoom", b =>
                {
                    b.Property<int>("ClassRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("course_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("teacher_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClassRoomId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("quizapp.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("student_email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("student_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("quizapp.Models.StudentClassroom", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassRoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "ClassRoomId");

                    b.HasIndex("ClassRoomId");

                    b.ToTable("StudentClassroom");
                });

            modelBuilder.Entity("quizapp.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("teacher_email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("teacher_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("quizapp.Models.ClassRoom", b =>
                {
                    b.HasOne("quizapp.Models.Teacher", "Teacher")
                        .WithMany("ClassRooms")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("quizapp.Models.StudentClassroom", b =>
                {
                    b.HasOne("quizapp.Models.ClassRoom", "ClassRoom")
                        .WithMany("Classrooms")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quizapp.Models.Student", "Student")
                        .WithMany("Classrooms")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("quizapp.Models.ClassRoom", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("quizapp.Models.Student", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("quizapp.Models.Teacher", b =>
                {
                    b.Navigation("ClassRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
